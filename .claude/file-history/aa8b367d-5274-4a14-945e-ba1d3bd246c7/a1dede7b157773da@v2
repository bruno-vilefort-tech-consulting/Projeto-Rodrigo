# CORRE√á√ïES APLICADAS NO INSTALADOR.SH
**Data:** 2025-10-06
**Vers√£o:** v5.0 corrigida

---

## üéØ PROBLEMAS IDENTIFICADOS E CORRIGIDOS

### 1. **ETAPA 12 - PostgreSQL (Linha 847)**
**Erro Original:**
```
ERROR: syntax error at or near "-"
LINE 1: CREATE EXTENSION IF NOT EXISTS uuid-ossp;
```

**Causa:**
O h√≠fen em `uuid-ossp` estava sendo interpretado como operador SQL devido a m√∫ltiplos n√≠veis de escape bash.

**Corre√ß√£o Aplicada:**
```bash
# ANTES:
psql -d \"${empresa}\" -c \"CREATE EXTENSION IF NOT EXISTS uuid-ossp;\"

# DEPOIS:
psql -d \"${empresa}\" -c \"CREATE EXTENSION IF NOT EXISTS \\\"uuid-ossp\\\";\"
```

**Impacto:** Extens√£o UUID agora √© criada corretamente no banco de dados.

---

### 2. **ETAPA 19 - Build Frontend (Linha 1075)**
**Erro Original:**
```
SyntaxError: Unexpected token '.'
at makeContextifyScript (node:internal/vm:185:14)
```

**Causa:**
JavaScript eval com aspas simples em `require('./package.json')` n√£o estava escapado corretamente.

**Corre√ß√£o Aplicada:**
```bash
# ANTES:
RS_MAJOR=$(node -e "try{const p=require('./package.json');const v=...")

# DEPOIS:
RS_MAJOR=$(node -e "try{const p=require(\"./package.json\");const v=((p.devDependencies&&p.devDependencies[\"react-scripts\"])...")
```

**Impacto:** Detec√ß√£o de vers√£o do react-scripts funciona corretamente, evitando warnings no build.

---

### 3. **ETAPA 20 - PM2 (Linha 1087)** ‚ö†Ô∏è CR√çTICO
**Erro Original:**
```
Error: Cannot find module '/usr/local/bin/global/5/.pnpm/pm2@6.0.13/node_modules/pm2/bin/pm2'
```

**Causa:**
Vari√°veis de ambiente `PNPM_HOME` e `PATH` n√£o estavam corretamente exportadas no contexto do PM2.

**Corre√ß√£o Aplicada:**
```bash
# ANTES:
/usr/bin/sudo -u deploy bash -lc "cd /home/deploy/${empresa}; export PNPM_HOME=\"\$HOME/.local/share/pnpm\"; export PATH=\"\$PNPM_HOME:\$PATH\"; cd backend; pm2 delete..."

# DEPOIS:
/usr/bin/sudo -u deploy bash -lc "export PNPM_HOME=\$HOME/.local/share/pnpm; export PATH=\$PNPM_HOME:\$PATH; cd /home/deploy/${empresa}/backend; pm2 delete..."
```

**Mudan√ßas:**
- Removido excesso de escapes nas vari√°veis de ambiente
- Simplificado o caminho de navega√ß√£o (cd direto para path completo)
- PATH agora √© exportado corretamente antes de executar PM2

**Impacto:** Backend e Frontend agora iniciam corretamente no PM2.

---

### 4. **ETAPA 18 - server.js (Linhas 995-1009)**
**Status:** ‚úÖ J√Å ESTAVA CORRETO

O c√≥digo do `server.js` no instalador j√° possu√≠a as aspas corretas:
```javascript
const express = require("express");
const path = require("path");
// ... etc
console.log("Frontend running on port " + PORT);
```

---

## üìã RESUMO DAS ALTERA√á√ïES

| Etapa | Linha | Problema | Status |
|-------|-------|----------|--------|
| ETAPA 12 | 847 | uuid-ossp sem aspas | ‚úÖ Corrigido |
| ETAPA 19 | 1075 | JavaScript eval com aspas incorretas | ‚úÖ Corrigido |
| ETAPA 20 | 1087 | Vari√°veis PM2 n√£o exportadas | ‚úÖ Corrigido |
| ETAPA 18 | 995-1009 | server.js | ‚úÖ J√° correto |

---

## üîÑ PR√ìXIMOS PASSOS

1. **Testar nova instala√ß√£o:**
   ```bash
   bash /root/instalador.sh
   ```

2. **Verificar servi√ßos:**
   ```bash
   sudo -u deploy bash -lc 'export PNPM_HOME=$HOME/.local/share/pnpm; export PATH=$PNPM_HOME:$PATH; pm2 list'
   ```

3. **Confirmar portas:**
   ```bash
   netstat -tlnp | grep -E ':(8080|3000)' | grep LISTEN
   ```

---

## üìÅ BACKUP

Backup do instalador original criado em:
```
/root/instalador.sh.backup-YYYYMMDD-HHMMSS
```

---

**Nota:** Todas as corre√ß√µes foram feitas no script de instala√ß√£o (`instalador.sh`) e n√£o nos arquivos gerados, garantindo que futuras instala√ß√µes funcionem corretamente desde o in√≠cio.
